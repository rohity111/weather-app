{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\Downloads\\\\react-weather-app-master\\\\react-weather-app-master\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this));\nconst config = {\n  scope: \"/\",\n  registerOptions: {\n    updateViaCache: \"none\"\n  },\n  onSuccess: registration => {\n    console.log(\"Service worker registration successful:\", registration);\n  },\n  onUpdate: registration => {\n    console.log(\"Service worker update available:\", registration);\n  }\n};\nserviceWorkerRegistration.register(config);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","serviceWorkerRegistration","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","config","scope","registerOptions","updateViaCache","onSuccess","registration","console","log","onUpdate","register"],"sources":["C:/Users/rohit/Downloads/react-weather-app-master/react-weather-app-master/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nconst config = {\n  scope: \"/\",\n  registerOptions: {\n    updateViaCache: \"none\"\n  },\n  onSuccess: (registration) => {\n    console.log(\"Service worker registration successful:\", registration);\n  },\n  onUpdate: (registration) => {\n    console.log(\"Service worker update available:\", registration);\n  },\n};\n\n\nserviceWorkerRegistration.register(config);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,OAAO,KAAKC,yBAAyB,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzE,MAAMC,IAAI,GAAGN,QAAQ,CAACO,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACN,KAAK,CAACY,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACJ,GAAG;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,KAAK,EAAE,GAAG;EACVC,eAAe,EAAE;IACfC,cAAc,EAAE;EAClB,CAAC;EACDC,SAAS,EAAGC,YAAY,IAAK;IAC3BC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,YAAY,CAAC;EACtE,CAAC;EACDG,QAAQ,EAAGH,YAAY,IAAK;IAC1BC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEF,YAAY,CAAC;EAC/D;AACF,CAAC;AAGDnB,yBAAyB,CAACuB,QAAQ,CAACT,MAAM,CAAC;;AAE1C;AACA;AACA;AACAf,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}